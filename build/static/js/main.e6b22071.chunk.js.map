{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","components/Sidebar/index.jsx","components/Dropdown/index.jsx","redux/actions/ThemeAction.js","components/ThemeMenu/index.jsx","assets/images/tuat.png","components/TopNav/index.jsx","components/StatusCard/index.jsx","components/Table/index.jsx","components/Badge/index.jsx","pages/Dashboard.jsx","pages/Customers.jsx","components/Routes.jsx","components/Layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","SidebarItem","props","active","className","icon","title","Sidebar","activeItem","sidebar_items","findIndex","item","route","location","pathname","useState","toggleBar","setToggleBar","map","index","to","display_name","onClick","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","ThemeAction","setMode","setColor","getTheme","mode_settings","id","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","currentMode","setCurrentMode","currentColor","setCurrentColor","dispatch","useDispatch","useEffect","themeClass","find","localStorage","getItem","colorClass","undefined","add","setItem","curr_user","image","user_image","TopNav","isSticky","setIsSticky","stickRef","handleScroll","getBoundingClientRect","top","window","placeholder","user","src","alt","user_menu","content","renderUserMenu","notifications","renderNotification","StatusCard","count","Table","initDataShow","limit","bodyData","slice","Number","dataShow","setDataShow","currPage","setCurrPage","pages","range","page","Math","floor","length","Array","keys","headData","renderHead","renderBody","start","end","selectPage","Badge","chartOptions","series","data","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","topCustomers","head","body","username","order","price","latestOrders","header","date","status","orderStatus","shipping","pending","paid","refund","Dashboard","themeReducer","useSelector","statusCards","theme","height","renderCustomerHead","renderCustomerBody","renderOrderHead","renderOrderBody","customerTableHead","Customers","customerList","email","phone","total_orders","total_spend","Routes","path","exact","component","Layout","render","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6b22071.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ThemeReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_MODE\":\r\n      return {\r\n        ...state,\r\n        mode: action.payload,\r\n      }\r\n    case \"SET_COLOR\": {\r\n      return {\r\n        ...state,\r\n        color: action.payload,\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default ThemeReducer\r\n","import ThemeReducer from \"./ThemeReducer\"\r\nimport { combineReducers } from \"redux\"\r\n\r\nconst rootReducer = combineReducers({\r\n  ThemeReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import React, { useState } from \"react\"\r\nimport \"./sidebar.scss\"\r\n\r\n// import logo from \"assets/images/logo.png\"\r\n\r\nimport sidebar_items from \"assets/JsonData/sidebar_routes.json\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst SidebarItem = (props) => {\r\n  const active = props.active ? \"active\" : \"\"\r\n  const className = props.className || \"\"\r\n\r\n  return (\r\n    <div className={`sidebar__item ${className}`}>\r\n      <div className={`sidebar__item-inner ${active}`}>\r\n        <i className={props.icon}></i>\r\n        <span>{props.title}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Sidebar = (props) => {\r\n  const activeItem = sidebar_items.findIndex(\r\n    (item) => item.route === props.location.pathname\r\n  )\r\n  const [toggleBar, setToggleBar] = useState(true)\r\n  return (\r\n    <div className={`sidebar ${toggleBar ? \"active\" : \"\"}`}>\r\n      <div className=\"sidebar__logo\">\r\n        {/* <img className=\"\" src={logo} alt=\"logo company\" /> */}\r\n        <h2>LOGO</h2>\r\n      </div>\r\n      {sidebar_items.map((item, index) => (\r\n        <Link to={item.route} key={index}>\r\n          <SidebarItem\r\n            title={item.display_name}\r\n            icon={item.icon}\r\n            active={index === activeItem}\r\n          />\r\n        </Link>\r\n      ))}\r\n      <div onClick={() => setToggleBar(!toggleBar)}>\r\n        <SidebarItem\r\n          className=\"sidebar__hide\"\r\n          title=\"Hide Bar\"\r\n          icon=\"bx bx-menu\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useRef } from \"react\"\r\nimport \"./dropdown.scss\"\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n  document.addEventListener(\"mousedown\", (e) => {\r\n    // User click toggle\r\n    if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n      content_ref.current.classList.toggle(\"active\")\r\n    } else {\r\n      // user click outside toggle and content\r\n      if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n        content_ref.current.classList.remove(\"active\")\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nconst Dropdown = (props) => {\r\n  const dropdown_toggle_el = useRef(null)\r\n  const dropdown_content_el = useRef(null)\r\n\r\n  clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button type=\"button\" ref={dropdown_toggle_el} className=\"dropdown__toggle\">\r\n        {props.icon ? <i className={props.icon}></i> : \"\"}\r\n        {props.badge ? (\r\n          <span className=\"dropdown__toggle-badge\">{props.badge}</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.customToggle ? props.customToggle() : \"\"}\r\n      </button>\r\n      <div ref={dropdown_content_el} className=\"dropdown__content\">\r\n        {props.contentData && props.renderItems\r\n          ? props.contentData.map((item, index) =>\r\n              props.renderItems(item, index)\r\n            )\r\n          : \"\"}\r\n\r\n        {props.renderFooter ? (\r\n          <div className=\"dropdown__footer\">{props.renderFooter()}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","const setMode = (mode) => {\r\n  return {\r\n    type: \"SET_MODE\",\r\n    payload: mode,\r\n  }\r\n}\r\n\r\nconst setColor = (color) => {\r\n  return {\r\n    type: \"SET_COLOR\",\r\n    payload: color,\r\n  }\r\n}\r\n\r\nconst getTheme = () => {\r\n  return {\r\n    type: \"GET_THEME\",\r\n  }\r\n}\r\n\r\nconst ThemeAction = {\r\n  setMode,\r\n  setColor,\r\n  getTheme,\r\n}\r\n\r\nexport default ThemeAction\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport \"./thememenu.scss\"\r\nimport ThemeAction from 'redux/actions/ThemeAction'\r\n\r\nconst mode_settings = [\r\n  {\r\n    id: \"light\",\r\n    name: \"Light\",\r\n    background: \"light-background\",\r\n    class: \"theme-mode-light\",\r\n  },\r\n  {\r\n    id: \"dark\",\r\n    name: \"Dark\",\r\n    background: \"dark-background\",\r\n    class: \"theme-mode-dark\",\r\n  },\r\n]\r\n\r\nconst color_settings = [\r\n  {\r\n    id: \"blue\",\r\n    name: \"Blue\",\r\n    background: \"blue-color\",\r\n    class: \"theme-color-blue\",\r\n  },\r\n  {\r\n    id: \"red\",\r\n    name: \"Red\",\r\n    background: \"red-color\",\r\n    class: \"theme-color-red\",\r\n  },\r\n  {\r\n    id: \"cyan\",\r\n    name: \"Cyan\",\r\n    background: \"cyan-color\",\r\n    class: \"theme-color-cyan\",\r\n  },\r\n  {\r\n    id: \"green\",\r\n    name: \"Green\",\r\n    background: \"green-color\",\r\n    class: \"theme-color-green\",\r\n  },\r\n  {\r\n    id: \"orange\",\r\n    name: \"Orange\",\r\n    background: \"orange-color\",\r\n    class: \"theme-color-orange\",\r\n  },\r\n]\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n  document.addEventListener(\"mousedown\", (e) => {\r\n    // user click toggle\r\n    if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n      content_ref.current.classList.toggle(\"active\")\r\n    } else {\r\n      // user click outside toggle and content\r\n      if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n        content_ref.current.classList.remove(\"active\")\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nconst ThemeMenu = () => {\r\n  const menu_ref = useRef(null)\r\n  const menu_toggle_ref = useRef(null)\r\n  clickOutsideRef(menu_ref, menu_toggle_ref)\r\n  const setActiveMenu = () => menu_ref.current.classList.add(\"active\")\r\n  const closeMenu = () => menu_ref.current.classList.remove(\"active\")\r\n\r\n  const [currentMode, setCurrentMode] = useState(\"light\")\r\n  const [currentColor, setCurrentColor] = useState(\"blue\")\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const setMode = (mode) => {\r\n    setCurrentMode(mode.id)\r\n    localStorage.setItem(\"themeMode\", mode.class)\r\n    dispatch(ThemeAction.setMode(mode.class))\r\n  }\r\n\r\n  const setColor = (color) => {\r\n    setCurrentColor(color.id)\r\n    localStorage.setItem(\"colorMode\", color.class)\r\n    dispatch(ThemeAction.setColor(color.class))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const themeClass = mode_settings.find(\r\n      (e) => e.class === localStorage.getItem(\"themeMode\", \"theme-mode-light\")\r\n    )\r\n    const colorClass = color_settings.find(\r\n      (e) => e.class === localStorage.getItem(\"colorMode\", \"theme-mode-light\")\r\n    )\r\n    if (themeClass !== undefined) {\r\n      setCurrentMode(themeClass.id)\r\n    }\r\n    if (colorClass !== undefined) {\r\n      setCurrentColor(colorClass.id)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        ref={menu_toggle_ref}\r\n        className=\"dropdown__toggle\"\r\n        onClick={() => setActiveMenu()}>\r\n        <i className=\"bx bx-palette\"></i>\r\n      </button>\r\n      <div ref={menu_ref} className=\"theme-menu\">\r\n        <h4>Theme settings</h4>\r\n        <button\r\n          type=\"button\"\r\n          className=\"theme-menu__close\"\r\n          onClick={() => closeMenu()}>\r\n          <i className=\"bx bx-x\"></i>\r\n        </button>\r\n        <div className=\"theme-menu__select\">\r\n          <span>Choose mode</span>\r\n          <ul className=\"mode-list\">\r\n            {mode_settings.map((item, index) => (\r\n              <li key={index} onClick={() => setMode(item)}>\r\n                <div\r\n                  className={`mode-list__color ${item.background} ${\r\n                    item.id === currentMode ? \"active\" : \"\"\r\n                  }`}>\r\n                  <i className=\"bx bx-check\"></i>\r\n                </div>\r\n                <span>{item.name}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"theme-menu__select\">\r\n          <span>Choose color</span>\r\n          <ul className=\"mode-list\">\r\n            {color_settings.map((item, index) => (\r\n              <li key={index} onClick={() => setColor(item)}>\r\n                <div\r\n                  className={`mode-list__color ${item.background} ${\r\n                    item.id === currentColor ? \"active\" : \"\"\r\n                  }`}>\r\n                  <i className=\"bx bx-check\"></i>\r\n                </div>\r\n                <span>{item.name}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemeMenu\r\n","export default __webpack_public_path__ + \"static/media/tuat.7ec76cec.png\";","import React, { useEffect, useRef, useState } from \"react\"\r\nimport \"./topnav.scss\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Dropdown from \"components/Dropdown\"\r\nimport ThemeMenu from \"components/ThemeMenu\"\r\nimport notifications from \"assets/JsonData/notification.json\"\r\nimport user_image from \"assets/images/tuat.png\"\r\nimport user_menu from \"assets/JsonData/user_menus.json\"\r\n\r\nconst curr_user = {\r\n  display_name: \"Le Nhan\",\r\n  image: user_image,\r\n}\r\n\r\nconst renderNotification = (item, index) => (\r\n  <div className=\"notification-item\" key={index}>\r\n    <i className={item.icon}></i>\r\n    <span>{item.content}</span>\r\n  </div>\r\n)\r\n\r\nconst renderUserToggle = (user) => (\r\n  <div className=\"topnav__right-user\">\r\n    <div className=\"topnav__right-user__image\">\r\n      <img src={user.image} alt={user.display_name} />\r\n    </div>\r\n    <div className=\"topnav__right-user__name\">{user.display_name}</div>\r\n  </div>\r\n)\r\n\r\nconst renderUserMenu = (item, index) => (\r\n  <Link to=\"/\" key={index}>\r\n    <div className=\"notification-item\">\r\n      <i className={item.icon}></i>\r\n      <span>{item.content}</span>\r\n    </div>\r\n  </Link>\r\n)\r\n\r\nconst TopNav = () => {\r\n  const [isSticky, setIsSticky] = useState(false)\r\n  const stickRef = useRef(null)\r\n  const handleScroll = () => {\r\n    if (stickRef.current) {\r\n      setIsSticky(stickRef.current.getBoundingClientRect().top <= 0)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => handleScroll())\r\n    return () => {\r\n      window.addEventListener(\"scroll\", () => handleScroll())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`topnav ${isSticky ? \"sticky\" : \"\"}`} ref={stickRef}>\r\n      <div className=\"topnav__search\">\r\n        <input type=\"text\" className=\"\" placeholder=\"Search here...\" />\r\n        <i className=\"bx bx-search\"></i>\r\n      </div>\r\n      <div className=\"topnav__right\">\r\n        <div className=\"topnav__right-item\">\r\n          {/* Dropdown here */}\r\n          <Dropdown\r\n            customToggle={() => renderUserToggle(curr_user)}\r\n            contentData={user_menu}\r\n            renderItems={(item, index) => renderUserMenu(item, index)}\r\n          />\r\n        </div>\r\n        <div className=\"topnav__right-item\">\r\n          {/* Dropdown here */}\r\n          <Dropdown\r\n            icon=\"bx bx-bell\"\r\n            badge={14}\r\n            contentData={notifications}\r\n            renderItems={(item, index) => renderNotification(item, index)}\r\n            renderFooter={() => <Link to=\"/\">View All</Link>}\r\n          />\r\n        </div>\r\n        <div className=\"topnav__right-item\">\r\n          {/* Theme settings here */}\r\n          <ThemeMenu />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopNav\r\n","import React from \"react\"\r\nimport \"./statuscard.scss\"\r\n\r\nconst StatusCard = (props) => {\r\n  return (\r\n    <div className=\"status-card\">\r\n      <div className=\"status-card__icon\">\r\n        <i className={props.icon}></i>\r\n      </div>\r\n      <div className=\"status-card__info\">\r\n        <h4>{props.count}</h4>\r\n        <span>{props.title}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatusCard\r\n","import React, { useState } from \"react\"\r\nimport \"./table.scss\"\r\n\r\nconst Table = (props) => {\r\n  const initDataShow =\r\n    props.limit && props.bodyData\r\n      ? props.bodyData.slice(0, Number(props.limit))\r\n      : props.bodyData\r\n\r\n  const [dataShow, setDataShow] = useState(initDataShow)\r\n  const [currPage, setCurrPage] = useState(1)\r\n\r\n  let pages = 1\r\n\r\n  let range = []\r\n\r\n  if (props.limit !== undefined) {\r\n    let page = Math.floor(props.bodyData.length / Number(props.limit))\r\n    pages = props.bodyData.length % Number(props.limit) === 0 ? page : page + 1\r\n    range = [...Array(pages).keys()]\r\n  }\r\n\r\n  const selectPage = (page) => {\r\n    const start = Number(props.limit) * page\r\n    const end = start + Number(props.limit)\r\n    setDataShow(props.bodyData.slice(start, end))\r\n    setCurrPage(page)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          {props.headData && props.renderHead ? (\r\n            <thead>\r\n              <tr>\r\n                {props.headData.map((item, index) =>\r\n                  props.renderHead(item, index)\r\n                )}\r\n              </tr>\r\n            </thead>\r\n          ) : null}\r\n          {props.bodyData && props.renderBody ? (\r\n            <tbody>\r\n              {dataShow.map((item, index) => props.renderBody(item, index))}\r\n            </tbody>\r\n          ) : null}\r\n        </table>\r\n      </div>\r\n      {pages > 1 ? (\r\n        <div className=\"table__pagination\">\r\n          {range.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className={`table__pagination-item ${\r\n                currPage === index ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => selectPage(index)}>\r\n              {item + 1}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import React from \"react\"\r\nimport \"./badge.scss\"\r\n\r\nconst Badge = (props) => {\r\n  return <span className={`badge badge-${props.type}`}>{props.content}</span>\r\n}\r\n\r\nexport default Badge\r\n","import React from \"react\"\r\nimport Chart from \"react-apexcharts\"\r\nimport { useSelector } from \"react-redux\"\r\nimport StatusCard from \"components/StatusCard\"\r\nimport Table from \"components/Table\"\r\nimport Badge from \"components/Badge\"\r\nimport statusCards from \"assets/JsonData/status-card-data.json\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst chartOptions = {\r\n  series: [\r\n    {\r\n      name: \"Online Customers\",\r\n      data: [40, 70, 20, 90, 36, 80, 30, 91, 60],\r\n    },\r\n    {\r\n      name: \"Store Customers\",\r\n      data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10],\r\n    },\r\n  ],\r\n  options: {\r\n    color: [\"#6ab04c\", \"#2980b9\"],\r\n    chart: {\r\n      background: \"transparent\",\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n      ],\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n  },\r\n}\r\n\r\nconst topCustomers = {\r\n  head: [\"user\", \"total orders\", \"total sending\"],\r\n  body: [\r\n    {\r\n      username: \"john doe\",\r\n      order: \"490\",\r\n      price: \"$15,870\",\r\n    },\r\n    {\r\n      username: \"frank iva\",\r\n      order: \"250\",\r\n      price: \"$12,251\",\r\n    },\r\n    {\r\n      username: \"anthony baker\",\r\n      order: \"120\",\r\n      price: \"$10,840\",\r\n    },\r\n    {\r\n      username: \"frank iva\",\r\n      order: \"110\",\r\n      price: \"$9,251\",\r\n    },\r\n    {\r\n      username: \"anthony baker\",\r\n      order: \"80\",\r\n      price: \"$8,840\",\r\n    },\r\n  ],\r\n}\r\nconst latestOrders = {\r\n  header: [\"order id\", \"user\", \"total price\", \"date\", \"status\"],\r\n  body: [\r\n    {\r\n      id: \"#OD1711\",\r\n      user: \"john doe\",\r\n      date: \"17 Jun 2021\",\r\n      price: \"$900\",\r\n      status: \"shipping\",\r\n    },\r\n    {\r\n      id: \"#OD1712\",\r\n      user: \"frank iva\",\r\n      date: \"1 Jun 2021\",\r\n      price: \"$400\",\r\n      status: \"paid\",\r\n    },\r\n    {\r\n      id: \"#OD1713\",\r\n      user: \"anthony baker\",\r\n      date: \"27 Jun 2021\",\r\n      price: \"$200\",\r\n      status: \"pending\",\r\n    },\r\n    {\r\n      id: \"#OD1712\",\r\n      user: \"frank iva\",\r\n      date: \"1 Jun 2021\",\r\n      price: \"$400\",\r\n      status: \"paid\",\r\n    },\r\n    {\r\n      id: \"#OD1713\",\r\n      user: \"anthony baker\",\r\n      date: \"27 Jun 2021\",\r\n      price: \"$200\",\r\n      status: \"refund\",\r\n    },\r\n  ],\r\n}\r\n\r\nconst orderStatus = {\r\n  shipping: \"primary\",\r\n  pending: \"warning\",\r\n  paid: \"success\",\r\n  refund: \"danger\",\r\n}\r\n\r\nconst renderCustomerHead = (item, index) => <th key={index}>{item}</th>\r\n\r\nconst renderCustomerBody = (item, index) => (\r\n  <tr key={index}>\r\n    <td>{item.username}</td>\r\n    <td>{item.order}</td>\r\n    <td>{item.price}</td>\r\n  </tr>\r\n)\r\n\r\nconst renderOrderHead = (item, index) => <th key={index}>{item}</th>\r\n\r\nconst renderOrderBody = (item, index) => (\r\n  <tr key={index}>\r\n    <td>{item.id}</td>\r\n    <td>{item.user}</td>\r\n    <td>{item.price}</td>\r\n    <td>{item.date}</td>\r\n    <td>\r\n      <Badge type={orderStatus[item.status]} content={item.status} />\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nconst Dashboard = () => {\r\n  const themeReducer = useSelector((state) => state.ThemeReducer.mode)\r\n\r\n  // const dispatch = useDispatch()\r\n\r\n  // useEffect(() =>{\r\n  //   dispatch(ThemeAction.getTheme())\r\n\r\n  // }, [dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-header\">Dashboard</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <div className=\"row\">\r\n            {statusCards.map((item, index) => (\r\n              <div className=\"col-6\" key={index}>\r\n                {/* Status card here */}\r\n                {item.title}\r\n                <StatusCard\r\n                  icon={item.icon}\r\n                  count={item.count}\r\n                  title={item.title}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"card full-height\">\r\n            {/* Chart */}\r\n            <Chart\r\n              options={\r\n                themeReducer === \"theme-mode-dark\"\r\n                  ? {\r\n                      ...chartOptions.options,\r\n                      theme: {\r\n                        mode: \"dark\",\r\n                      },\r\n                    }\r\n                  : {\r\n                      ...chartOptions.options,\r\n                      theme: {\r\n                        mode: \"light\",\r\n                      },\r\n                    }\r\n              }\r\n              series={chartOptions.series}\r\n              type=\"line\"\r\n              height=\"100%\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card__header\">\r\n              <h3>Top Customers</h3>\r\n            </div>\r\n            <div className=\"card__body\">\r\n              {/* Table */}\r\n              <Table\r\n                headData={topCustomers.head}\r\n                renderHead={(item, index) => renderCustomerHead(item, index)}\r\n                bodyData={topCustomers.body}\r\n                renderBody={(item, index) => renderCustomerBody(item, index)}\r\n              />\r\n            </div>\r\n            <div className=\"card__footer\">\r\n              <Link to=\"/\">View All </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card__header\">\r\n              <h3>Lasted orders</h3>\r\n            </div>\r\n            <div className=\"card__body\">\r\n              <Table\r\n                headData={latestOrders.header}\r\n                renderHead={(item, index) => renderOrderHead(item, index)}\r\n                bodyData={latestOrders.body}\r\n                renderBody={(item, index) => renderOrderBody(item, index)}\r\n              />\r\n            </div>\r\n            <div className=\"card__footer\">\r\n              <Link to=\"/\">View All </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from \"react\"\r\nimport Table from \"components/Table\"\r\nimport customerList from \"assets/JsonData/customers-list.json\"\r\n\r\nconst customerTableHead = [\r\n  \"\",\r\n  \"name\",\r\n  \"email\",\r\n  \"phone\",\r\n  \"total orders\",\r\n  \"total spend\",\r\n  \"location\",\r\n]\r\n\r\nconst renderHead = (item, index) => <th key={index}>{item}</th>\r\n\r\nconst renderBody = (item, index) => (\r\n  <tr key={index}>\r\n    <td>{item.id}</td>\r\n    <td>{item.name}</td>\r\n    <td>{item.email}</td>\r\n    <td>{item.phone}</td>\r\n    <td>{item.total_orders}</td>\r\n    <td>{item.total_spend}</td>\r\n    <td>{item.location}</td>\r\n  </tr>\r\n)\r\nconst Customers = () => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-header\">Customers</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card__body\">\r\n              <Table\r\n                limit=\"10\"\r\n                headData={customerTableHead}\r\n                renderHead={(item, index) => renderHead(item, index)}\r\n                bodyData={customerList}\r\n                renderBody={(item, index) => renderBody(item, index)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customers\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\"\r\n\r\nimport Dashboard from \"pages/Dashboard\"\r\nimport Customers from \"pages/Customers\"\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Dashboard} />\r\n      <Route path=\"/customers\" exact component={Customers} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useEffect } from \"react\"\r\nimport \"./layout.scss\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport Sidebar from \"components/Sidebar\"\r\nimport TopNav from \"components/TopNav\"\r\nimport Routes from \"components/Routes\"\r\nimport ThemeAction from \"redux/actions/ThemeAction\"\r\n\r\nconst Layout = (props) => {\r\n  const themeReducer = useSelector((state) => state.ThemeReducer)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const themeClass = localStorage.getItem(\"themeMode\", \"theme-mode-light\")\r\n\r\n    const colorClass = localStorage.getItem(\"colorMode\", \"theme-mode-light\")\r\n    dispatch(ThemeAction.setMode(themeClass))\r\n    dispatch(ThemeAction.setColor(colorClass))\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <Route\r\n        render={(props) => (\r\n          <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\r\n            <Sidebar {...props} />\r\n            <div className=\"layout__content\">\r\n              <TopNav />\r\n              <div className=\"layout__content-main\">\r\n                <Routes />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nimport \"assets/boxicons-2.0.7/css/boxicons.min.css\"\r\nimport \"assets/css/grid.css\"\r\nimport \"assets/css/theme.css\"\r\nimport \"assets/css/index.css\"\r\n\r\nimport { createStore } from \"redux\"\r\nimport { Provider } from \"react-redux\"\r\nimport rootReducer from \"redux/reducers\"\r\n\r\nimport Layout from \"components/Layout/Layout\"\r\n\r\nconst store = createStore(rootReducer)\r\n\r\ndocument.title = \"Admin Dashboard\"\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Layout />\r\n    </React.StrictMode>\r\n</Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}